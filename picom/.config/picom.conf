# Thank you code_nomad: http://9m.no/ꪯ鵞
# and Arch Wiki contributors: https://wiki.archlinux.org/index.php/Compton

#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";
#backend = "xrender"

#################################
#
# GLX backend
#
#################################

glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;

# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
#glx-swap-method = "undefined";

#################################
#
# Shadows
#
#################################
rouned-border = 10;
corner-radius = 10;
# Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 15;
# The left offset for shadows. (default -15)
shadow-offset-x = -5;
# The top offset for shadows. (default -15)
shadow-offset-y = -5;
# The translucency for shadows. (default .75)
shadow-opacity = 0.5;

log-level = "warn";
#change your username here
#log-file = "/home/erik/.config/compton.log";

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = ${color.color1};

# The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [

    "class_g = 'firefox' && argb",
    "class_g *= 'Minecraft* 1.20.4'",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'picom'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "class_g = 'Firefox' && argb",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g = 'Cairo-clock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'awesome'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    # "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
    # "QTILE_INTERNAL:32c = 1",
];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)

shadow-ignore-shaped = false;

#################################
#
# Opacity
#
#################################

inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
#blur-background-fixed = true;
#blur-background = false;
#blur-kern = "3x3box";
#blur-method = "kernel";
#blur-strength = 0;
# blur-background-exclude = [
#     "window_type = 'idea'",
#    "name = 'Minecraft* 1.20.4'",
##     "window_type = 'desktop'",
##     "_GTK_FRAME_EXTENTS@:c"
# ];

opacity-rule = [
    "100:name *?= 'vlc'",
    "90:class_g *= 'thunderbird'",
    "90:class_g *= 'neovide'",
    "98:class_g *= 'discord'",
    "50:class_g *= 'vscodium'",
    "90:class_g *= 'VSCodium'",
    "96:class_g *= 'nvim'",
    "96:class_g *= 'nvim'",
    "96:class_g *= 'neovim'",
    "98:class_g *= 'idea'",
    "98:class_g *= 'code'",
    "92:class_g *= 'polybar'",
    "98:class_g *= 'kitty'",
    "98:class_g *= 'alacritty'",
    "100:class_g *= 'emacs'",
    "90:class_g *= 'dolphin'",
    "93:class_g *= 'Spotify'",
];


#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = false;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 10;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.08;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.08;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ 
    "class_g *= 'Minecraft* 1.20.4'",
    
];

#################################
#
# Other
#
#################################

rouned-borders = 10;
corner-radius = 20;
# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;


# Vertical synchronization: match the refresh rate of the monitor
# this breaks transparency in virtualbox - put a "#" before next line to fix that
vsync = false;
#
# Specify refresh rate of the screen.
# If not specified or 0, picom will try detecting this with X RandR extension.
# refresh-rate = 144;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = true;

# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = false;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [
    "class_g *= 'Minecraft* 1.20.4'",
    "class_g *= 'awesome'",
];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.9; focus = true;};
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.9; }
  dropdown_menu = { opacity = 0.9; }
};

######################
#
# XSync
# See: https://github.com/yshui/compton/commit/b18d46bcbdc35a3b5620d817dd46fbc76485c20d
#
######################

# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users.
# xrender-sync-fence = true;
#animations=true


#################################
#          Transitions          #
#################################

# When windows get moved or resized it transitions window position 
#transition = true;
#
## How many pixels move window to make the first position in transition (defaults to 20)
#transition-offset = 50;
#
## Direction of transition (top, right, bottom, left) e.g: "right" direction will make
## all windows come from right to left
#
## (smart-x, smart-y) are smart direction that will check if there are 
## multiple windows that splits the screen and will change their directions,
## in "smart-x" it changes direction of left window to "right" and direction of 
## right window to "left", if screen is not splited and a window is taking 
## a lot of screen it will change that window direction to "left".
## "smart-y" is also exactly like "smart-x" but instead of translating directions to
## "right" and "left", it translate to "top" and "bottom"
#transition-direction = "smart-x";
#
## Function that calculates new position of window (defaults to "ease-out-cubic")
## see https://easings.net for list of all functions
## naming conventions are different to that site tho, e.g "easeInSine" is listed
## on site but here that translated to "ease-in-sine"
#transition-timing-function = "ease-in-sine";
#
## Time between frames in transition. (0.01 - 1.0, defaults to 0.028)
#transition-step = 0.058;
#
## Similar to opacity rules but determites transition direction e.g:
## "right: name *= 'Firefox'" will make firefox transition direction to right
## Specify a list of transition rules, in the format `DIRECTION:PATTERN`
#
## for disabling transition on specific patterns use "none" keyword as a direction
## e.g: use "none: window_type = 'popup_menu'" for disabling transitions on popup menus
#transition-rule = [];

#################################
#           Animations         #

# !These animations WILL NOT work correctly for any other wm other than phyOS-dwm fork!

# fly-in: Windows fly in from random directions to the screen
# maximize: Windows pop from center of the screen to their respective positions
# minimize: Windows minimize from their position to the center of the screen
# slide-in-center: Windows move from upper-center of the screen to their respective positions
# slide-out-center: Windows move to the upper-center of the screen
# slide-left: Windows are created from the right-most window position and slide leftwards
# slide right: Windows are created from the left-most window position and slide rightwards
# slide-down: Windows are moved from the top of the screen and slide downward
# slide-up: Windows are moved from their position to top of the screen
# squeeze: Windows are either closed or created to/from their center y-position (the animation is similar to a blinking eye)
# squeeze-bottom: Similar to squeeze, but the animation starts from bottom-most y-position
# zoom: Windows are either created or destroyed from/to their center (not the screen center)

#################################

#enable or disable animations
animations = true;
#change animation speed of windows in current tag e.g open window in current tag
animation-stiffness-in-tag = 202;
#change animation speed of windows when tag changes
animation-stiffness-tag-change = 190.0;

animation-window-mass = 0.4;
animation-dampening = 15;
animation-clamping = true;

#open windows
animation-for-open-window = "zoom";
#minimize or close windows
animation-for-unmap-window = "squeeze";
#popup windows
animation-for-transient-window = "slide-up"; #available options: slide-up, slide-down, slide-left, slide-right, squeeze, squeeze-bottom, zoom

#set animation for windows being transitioned out while changings tags
animation-for-prev-tag = "minimize";
#enables fading for windows being transitioned out while changings tags
enable-fading-prev-tag = true;

#set animation for windows being transitioned in while changings tags
animation-for-next-tag = "slide-in-center";
#enables fading for windows being transitioned in while changings tags
enable-fading-next-tag = true;

